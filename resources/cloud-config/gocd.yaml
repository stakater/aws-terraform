#cloud-config

# gocd cloud-config
coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
  fleet:
    public-ip: $private_ipv4
    metadata: "env=CLUSTER-NAME,platform=ec2,provider=aws,role=gocd"
    etcd_key_prefix: "/stakater/gocd/"
  update:
    reboot-strategy: off
  units:
    - name: etcd2.service
      command: start
      drop-ins:
        - name: 60-initial-cluster.conf
          content: |
            [Service]
            EnvironmentFile=/etc/sysconfig/initial-cluster
    - name: fleet.service
      command: start
    - name: gocd-server.service
      command: start
      content: |
        [Unit]
        Description=gocd server
        After=docker.service
        Requires=docker.service
        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull gocd/gocd-server:16.5.0-3305
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                                  -p 8153:8153 \
                                  -e AGENT_KEY=123456789abcdef \
                                  -e AGENT_KEY=123456789zxcvb \
                                  -e AGENT_KEY=123456789mnbvcx \
                                  -e AGENT_KEY=123456789lkjhgf \
                                  -e AGENT_KEY=123456789ytrewq \
                                  -v /gocd-data/conf:/etc/go \
                                  -v /gocd-data/passwd:/passwd \
                                  gocd/gocd-server:16.5.0-3305"
        ExecStop=/usr/bin/docker stop %n
        RestartSec=10
        Restart=always
    - name: gocd-agent-ci-base.service
      command: start
      content: |
        [Unit]
        Description=gocd agent # 1 for continuous integration base docker images
        After=docker.service
        Requires=docker.service
        After=gocd-server.service
        Requires=gocd-server.service
        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull stakater/gocd-agent:16.5.0-3305
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                -e AGENT_KEY=123456789abcdef \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /usr/bin/docker:/usr/bin/docker \
                -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02 \
                -v /usr/lib64/libsystemd.so.0:/usr/lib/libsystemd.so.0 \
                -v /usr/lib64/libgcrypt.so.20:/usr/lib/libgcrypt.so.20 \
                -v /gocd-data/sudoers:/etc/sudoers.d \
                -v /gocd-data/route53:/gocd-data/route53 \
                -v /usr/bin/fleetctl:/usr/bin/fleetctl \
                -v /etc/registry_certificates:/etc/registry_certificates \
                -v /app:/app \
                --link gocd-server.service:go-server \
                stakater/gocd-agent:16.5.0-3305"
        ExecStop=-/usr/bin/docker stop %n
        RestartSec=10
        Restart=always
    - name: gocd-agent-ci-app.service
      command: start
      content: |
        [Unit]
        Description=gocd agent # 2 for continuous integration of app docker images
        After=docker.service
        Requires=docker.service
        After=gocd-server.service
        Requires=gocd-server.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull stakater/gocd-agent:16.5.0-3305
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                -e AGENT_KEY=123456789zxcvb \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /usr/bin/docker:/usr/bin/docker \
                -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02 \
                -v /usr/lib64/libsystemd.so.0:/usr/lib/libsystemd.so.0 \
                -v /usr/lib64/libgcrypt.so.20:/usr/lib/libgcrypt.so.20 \
                -v /usr/bin/fleetctl:/usr/bin/fleetctl \
                -v /gocd-data/sudoers:/etc/sudoers.d \
                -v /gocd-data/route53:/gocd-data/route53 \
                -v /etc/registry_certificates:/etc/registry_certificates \
                -v /app:/app \
                --link gocd-server.service:go-server \
                stakater/gocd-agent:16.5.0-3305"
        ExecStop=-/usr/bin/docker stop %n
        RestartSec=10
        Restart=always
    - name: gocd-agent-cd-dev.service
      command: start
      content: |
        [Unit]
        Description=gocd agent # 3 for continuous deployment to DEV environment
        After=docker.service
        Requires=docker.service
        After=gocd-server.service
        Requires=gocd-server.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull stakater/gocd-agent:16.5.0-3305
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                -e AGENT_KEY=123456789mnbvcx \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /usr/bin/docker:/usr/bin/docker \
                -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02 \
                -v /usr/lib64/libsystemd.so.0:/usr/lib/libsystemd.so.0 \
                -v /usr/lib64/libgcrypt.so.20:/usr/lib/libgcrypt.so.20 \
                -v /usr/bin/fleetctl:/usr/bin/fleetctl \
                -v /gocd-data/sudoers:/etc/sudoers.d \
                -v /gocd-data/route53:/gocd-data/route53 \
                -v /etc/registry_certificates:/etc/registry_certificates \
                -v /app:/app \
                --link gocd-server.service:go-server \
                stakater/gocd-agent:16.5.0-3305"
        ExecStop=-/usr/bin/docker stop %n
        RestartSec=10
        Restart=always
    - name: gocd-agent-cd-test.service
      command: start
      content: |
        [Unit]
        Description=gocd agent # 4 for continuous deployment to TEST environment
        After=docker.service
        Requires=docker.service
        After=gocd-server.service
        Requires=gocd-server.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull stakater/gocd-agent:16.5.0-3305
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                -e AGENT_KEY=123456789lkjhgf \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /usr/bin/docker:/usr/bin/docker \
                -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02 \
                -v /usr/lib64/libsystemd.so.0:/usr/lib/libsystemd.so.0 \
                -v /usr/lib64/libgcrypt.so.20:/usr/lib/libgcrypt.so.20 \
                -v /usr/bin/fleetctl:/usr/bin/fleetctl \
                -v /gocd-data/sudoers:/etc/sudoers.d \
                -v /gocd-data/route53:/gocd-data/route53 \
                -v /etc/registry_certificates:/etc/registry_certificates \
                -v /app:/app \
                --link gocd-server.service:go-server \
                stakater/gocd-agent:16.5.0-3305"
        ExecStop=-/usr/bin/docker stop %n
        RestartSec=10
        Restart=always
    - name: gocd-agent-cd-prod.service
      command: start
      content: |
        [Unit]
        Description=gocd agent # 5 for continuous deployment to PROD environment
        After=docker.service
        Requires=docker.service
        After=gocd-server.service
        Requires=gocd-server.service

        [Service]
        EnvironmentFile=/etc/environment
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull stakater/gocd-agent:16.5.0-3305
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStart=/usr/bin/sh -c "/usr/bin/docker run --rm --name %n \
                -e AGENT_KEY=123456789ytrewq \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v /usr/bin/docker:/usr/bin/docker \
                -v /usr/lib/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02 \
                -v /usr/lib64/libsystemd.so.0:/usr/lib/libsystemd.so.0 \
                -v /usr/lib64/libgcrypt.so.20:/usr/lib/libgcrypt.so.20 \
                -v /usr/bin/fleetctl:/usr/bin/fleetctl \
                -v /gocd-data/sudoers:/etc/sudoers.d \
                -v /gocd-data/route53:/gocd-data/route53 \
                -v /etc/registry_certificates:/etc/registry_certificates \
                -v /app:/app \
                --link gocd-server.service:go-server \
                stakater/gocd-agent:16.5.0-3305"
        ExecStop=-/usr/bin/docker stop %n
        RestartSec=10
        Restart=always
