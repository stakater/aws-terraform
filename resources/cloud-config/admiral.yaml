#cloud-config

coreos:
  etcd2:
    discovery: https://discovery.etcd.io/59b91eba6a0705e55ff470943ee5c14a
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
  fleet:
    public-ip: $private_ipv4
    metadata: "env=CLUSTER-NAME,platform=ec2,provider=aws,role=admiral"
  update:
    reboot-strategy: off
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: reload-or-restart
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
          [Unit]
          Description=Docker Socket for the API

          [Socket]
          ListenStream=2375
          Service=docker.service
          BindIPv6Only=both

          [Install]
          WantedBy=sockets.target
    - name: format-opt-data.service
      command: start
      content: |
        [Unit]
        Description=Formats opt data drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Environment="LABEL=opt-data"
        Environment="DEV=/dev/xvdc"
        ExecStart=-/bin/bash -c "if ! findfs LABEL=$LABEL > /tmp/label.$LABEL; then  wipefs -a -f $DEV && mkfs.ext4 -F -L $LABEL $DEV && echo wiped; fi"
    - name: opt-data.mount
      command: start
      content: |
        [Unit]
        Description=Mount data to /opt/data
        Requires=format-opt-data.service
        After=format-opt-data.service
        [Mount]
        What=/dev/xvdc
        Where=/opt/data
        Type=ext4
    - name: update-window.service
      command: start
      content: |
        [Unit]
        Description=Reboot if an update has been downloaded
        ConditionPathExists=/opt/bin/update-window.sh
        [Service]
        ExecStart=/opt/bin/update-window.sh
    - name: update-window.timer
      command: start
      content: |
        [Unit]
        Description=Reboot timer
        [Timer]
        OnCalendar=*-*-* 05,06:00/30:00
