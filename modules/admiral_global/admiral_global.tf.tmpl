#
# Admiral Global autoscale group configurations
#

resource "aws_instance" "admiral_global" {
  # use system generated name to allow changes of launch_configuration
  # name = "workder-${var.ami}"
  ami = "${var.ami}"
  instance_type = "${var.image_type}"
  iam_instance_profile = "${aws_iam_instance_profile.admiral_global.name}"

  availability_zone =<%MODULE-AZ-VARIABLE%>
  subnet_id =  <%MODULE-SUBNET-VARIABLE%>

  # /root
  root_block_device = {
    volume_type = "gp2"
    volume_size = "${var.root_volume_size}"
  }
  # /var/lib/docker
  ebs_block_device = {
    device_name = "/dev/sdb"
    volume_type = "gp2"
    volume_size = "${var.docker_volume_size}"
  }

  key_name = "${var.keypair}"
  security_groups = ["${aws_security_group.admiral_global.id}"]
  lifecycle { create_before_destroy = true }

  # /opt/data
  ebs_block_device = {
    device_name = "/dev/sdc"
    volume_type = "gp2"
    volume_size = "${var.data_volume_size}"
  }

  tags {
        Name = "admiral_global"
  }

  user_data = "${file("cloud-config/s3-cloudconfig-bootstrap.sh")}"
}

resource "aws_iam_instance_profile" "admiral_global" {
    name = "${var.cluster_name}_admiral_global"
    roles = ["${aws_iam_role.admiral_global.name}"]
}

resource "aws_iam_role_policy" "admiral_global_policy" {
    name = "${var.cluster_name}_admiral_global"
    role = "${aws_iam_role.admiral_global.id}"
    policy = "${file(\"policies/admiral_global_policy.json\")}"
}

resource "aws_iam_role" "admiral_global" {
    name = "${var.cluster_name}_admiral_global"
    path = "/"
    assume_role_policy =  "${file(\"policies/assume_role_policy.json\")}"
}

output "admiral_global_private_ip" {
    value = "${aws_instance.admiral_global.private_ip}"
}
