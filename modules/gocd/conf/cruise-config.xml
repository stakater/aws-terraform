<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="81">
  <server artifactsdir="artifacts" agentAutoRegisterKey="123456789ytrewq" commandRepositoryLocation="default" serverId="e89d0b81-9c38-4e25-a946-ac1dc6944233">
    <security>
          <passwordFile path="/passwd" />
    </security>
  </server>
  <pipelines group="App-Development">
    <pipeline name="app-build-dev" template="stakater_build">
      <params>
        <param name="SOURCE_DIR" />
        <param name="ENVIRONMENT">dev</param>
        <param name="APP_DOCKER_IMAGE"></param>
      </params>
      <materials>
        <git url="" branch="develop" />
      </materials>
    </pipeline>
    <pipeline name="app-deploy-dev" template="stakater_deploy_cluster">
      <params>
        <param name="SOURCE_DIR" />
	<param name="CLUSTER_ENV">dev</param>
        <param name="APP_DOCKER_IMAGE"></param>
      </params>
      <materials>
        <pipeline pipelineName="app-build-dev" stageName="Build" />
      </materials>
    </pipeline>
    <pipeline name="app-deploy-qa" isLocked="false" template="stakater_deploy_cluster">
      <params>
        <param name="SOURCE_DIR" />
        <param name="CLUSTER_ENV">qa</param>
        <param name="APP_DOCKER_IMAGE"></param>
      </params>
      <timer>0 0 00 ? * MON-FRI</timer>
      <materials>
        <git url="" autoUpdate="false" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="App-Production">
    <pipeline name="app-build-prod" template="stakater_build">
      <params>
        <param name="SOURCE_DIR" />
        <param name="ENVIRONMENT">prod</param>
        <param name="APP_DOCKER_IMAGE"></param>
      </params>
      <materials>
        <git url="" branch="master" />
      </materials>
    </pipeline>
    <pipeline name="app-deploy-prod" template="stakater_build_ami">
      <params>
        <param name="SOURCE_DIR" />
        <param name="APP_DOCKER_IMAGE"></param>
      </params>
      <materials>
        <pipeline pipelineName="app-build-prod" stageName="Build" />
      </materials>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="stakater_build">
      <stage name="Build">
        <jobs>
          <job name="Build">
            <tasks>
              <exec command="/bin/bash" workingdir="#{SOURCE_DIR}">
                <arg>-c</arg>
                <arg>/gocd-data/scripts/build-docker-image.sh #{ENVIRONMENT} ${GO_PIPELINE_COUNTER}.${GO_STAGE_COUNTER} #{APP_DOCKER_IMAGE}</arg>
                <runif status="any" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="stakater_deploy_cluster">
      <stage name="Deploy-to-Cluster" fetchMaterials="false">
        <jobs>
          <job name="Run">
            <tasks>
              <exec command="/bin/bash" workingdir="#{SOURCE_DIR}">
                <arg>-c</arg>
                <arg>/gocd-data/scripts/deploy-to-cluster.sh #{CLUSTER_ENV} #{APP_DOCKER_IMAGE}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="stakater_build_ami">
      <stage name="Build-AMI" fetchMaterials="false">
        <approval type="manual" />
        <jobs>
          <job name="Run">
            <tasks>
              <exec command="/bin/bash" workingdir="#{SOURCE_DIR}">
                <arg>-c</arg>
                <arg>/gocd-data/scripts/build-ami.sh ${GO_PIPELINE_COUNTER}.${GO_STAGE_COUNTER} $(uuid -v4) #{APP_DOCKER_IMAGE}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <environments>
    <environment name="Build-Development">
      <agents>
        <physical uuid="" />
      </agents>
      <pipelines>
        <pipeline name="app-build-dev" />
      </pipelines>
    </environment>
    <environment name="Deploy-Development">
      <agents>
        <physical uuid="" />
      </agents>
      <pipelines>
        <pipeline name="app-deploy-dev" />
      </pipelines>
    </environment>
    <environment name="Test">
      <agents>
        <physical uuid="" />
      </agents>
      <pipelines>
        <pipeline name="app-deploy-qa" />
      </pipelines>
    </environment>
    <environment name="Build-Production">
      <agents>
        <physical uuid="" />
      </agents>
      <pipelines>
        <pipeline name="app-build-prod" />
      </pipelines>
    </environment>
    <environment name="Deploy-Production">
      <agents>
        <physical uuid="" />
      </agents>
      <pipelines>
        <pipeline name="app-deploy-prod" />
      </pipelines>
    </environment>
  </environments>
  <agents>
  </agents>
</cruise>
