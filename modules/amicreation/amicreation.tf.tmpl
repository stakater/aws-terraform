/* VPN Server -> Creating an EC2 instance on AWS */
resource "aws_instance" "amicreation" {
  count = 1
  ami   = "${var.ami}"
  availability_zone =<%AMICREATION-AZ-VARIABLE%>
  instance_type = "${var.image_type}"
  iam_instance_profile = "${aws_iam_instance_profile.amicreation.name}"
  
   # /root
  root_block_device = {
    volume_type = "gp2"
    volume_size = "${var.root_volume_size}"
  }
  # /var/lib/docker
  ebs_block_device = {
    device_name = "/dev/sdb"
    volume_type = "gp2"
    volume_size = "${var.docker_volume_size}"
  }

  key_name      = "${var.keypair}"
  subnet_id =  <%AMICREATION-SUBNET-VARIABLE%>
  security_groups = ["${aws_security_group.amicreation.id}"]

  user_data = "${file("cloud-config/s3-cloudconfig-bootstrap.sh")}"
}

# setup the amicreation ec2 profile, role and polices
resource "aws_iam_instance_profile" "amicreation" {
    name = "${var.cluster_name}_amicreation"
    roles = ["${aws_iam_role.amicreation.name}"]
    depends_on = [ "aws_iam_role.amicreation" ]
}

resource "aws_iam_role_policy" "amicreation_policy" {
    name = "${var.cluster_name}_amicreation_policy"
    role = "${aws_iam_role.amicreation.id}"
    policy = "${file(\"policies/amicreation_policy.json\")}"
    depends_on = [ "aws_iam_role.amicreation" ]
}

resource "aws_iam_role" "amicreation" {
    name = "${var.cluster_name}_amicreation"
    path = "/"
    assume_role_policy =  "${file(\"policies/assume_role_policy.json\")}"
}

output "instance_id" {
    value = "${aws_instance.amicreation.id}"
}
