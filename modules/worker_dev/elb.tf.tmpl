#
# worker_dev load balancer configurations
#
resource "aws_elb" "worker_dev" {
  name = "${var.cluster_name}-worker-dev-elb"
  # This placeholder will be replaced by array of variables defined for VPC zone IDs in the module's variables
  subnets = <%MODULE-ID-VARIABLES-ARRAY%>

  listener {
    instance_port = "${var.http_instance_port}"
    instance_protocol = "http"
    lb_port = "${var.http_lb_port}"
    lb_protocol = "http"
  }

  health_check {
    healthy_threshold = 2
    unhealthy_threshold = 2
    timeout = 3
    target = "${var.health_check_target}"
    interval = 30
  }

  cross_zone_load_balancing = true
  idle_timeout = 400
  connection_draining = true
  connection_draining_timeout = 400

  tags {
    Name = "${var.cluster_name}_worker_dev_elb"
  }
}

resource "aws_lb_cookie_stickiness_policy" "worker_dev_stickiness_policy" {
      name = "${var.cluster_name}-worker-dev-elb-stickiness-policy"
      load_balancer = "${aws_elb.worker_dev.id}"
      lb_port = "${var.http_lb_port}"
}

# DNS registration
resource "aws_route53_record" "private-worker-dev" {
  zone_id = "${var.route53_private_zone_id}"
  name = "worker-dev"
  type = "A"

  alias {
    name = "${aws_elb.worker_dev.dns_name}"
    zone_id = "${aws_elb.worker_dev.zone_id}"
    evaluate_target_health = true
  }
}
